import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:movemint_user/core/utils/pref_utils.dart';
import 'package:movemint_user/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(26.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 4,
        space: 4,
        color: appTheme.black900,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 17.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900.withOpacity(0.46),
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 40.fSize,
          fontFamily: 'Raleway',
          fontWeight: FontWeight.w800,
        ),
        headlineMedium: TextStyle(
          color: appTheme.gray800,
          fontSize: 26.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF01A367),
    primaryContainer: Color(0XFF1F2024),

    // Error colors
    errorContainer: Color(0XFF000000),
    onErrorContainer: Color(0XFF2E3036),

    // On colors(text colors)
    onPrimary: Color(0XFF311950),
    onPrimaryContainer: Color(0XFFBFBBB8),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray900 => Color(0XFF2E3036);

  // BlueGray
  Color get blueGray100 => Color(0XFFD1D6DA);
  Color get blueGray10001 => Color(0XFFCFD4DA);
  Color get blueGray200 => Color(0XFFA1AEBE);
  Color get blueGray400 => Color(0XFF76889A);

  // Gray
  Color get gray200 => Color(0XFFF0F0F0);
  Color get gray300 => Color(0XFFDEDEDE);
  Color get gray500 => Color(0XFF8F9098);
  Color get gray700 => Color(0XFF585858);
  Color get gray70001 => Color(0XFF675A5A);
  Color get gray800 => Color(0XFF474646);
  Color get gray100 => Color(0XFFF1F2F6);
  Color get gray10001 => Color(0XFFF2F3FF);
  Color get gray10002 => Color(0XFFF5F5F5);
  Color get gray400 => Color(0XFFC5C6CC);
  Color get gray50 => Color(0XFFFCFCFC);
  Color get gray600 => Color(0XFF71727A);
  Color get gray900 => Color(0XFF21252C);
  Color get gray5001 => Color(0XFFF7F8FD);
  Color get gray5002 => Color(0XFFF7F8FF);
  Color get gray90001 => Color(0XFF1F2024);
  Color get gray90002 => Color(0XFF202020);
  Color get gray5003 => Color(0XFFF7F8FD);

  // Green
  Color get green900 => Color(0XFF0C6A11);
  Color get greenA70075 => Color(0X7500BD6D);
  Color get green400 => Color(0XFF51BC76);
  Color get green50 => Color(0XFFE9FFE5);
  Color get greenA700 => Color(0XFF06B169);
  Color get greenA200 => Color(0XFF53FF8F);

  // DeepPurple
  Color get deepPurple50 => Color(0XFFE8D6FF);

  // Orange
  Color get orange50 => Color(0XFFFFF4E4);

  // LightGreen
  Color get lightGreen400 => Color(0XFF86C969);
  Color get greenA70001 => Color(0XFF06B169);

  // LightGreenc
  Color get lightGreen4006c => Color(0X6C8ACA6A);

  // Purple
  Color get purple900 => Color(0XFF47286F);
  Color get purple90001 => Color(0XFF46276E);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Blue
  Color get blue50 => Color(0XFFEAF2FF);

  // Teal
  Color get teal600 => Color(0XFF01A367);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
